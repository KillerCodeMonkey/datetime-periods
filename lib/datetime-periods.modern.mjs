const e=(e,t)=>new Date(new Date(`${e<12?t:t+1}-${e<12?e+1:1}-1`).setDate(0)).getDate(),t={days:!0,hours:!0,minutes:!0,months:!0,seconds:!0,years:!0},n=e=>({day:e.getDate(),hour:e.getHours(),minute:e.getMinutes(),month:e.getMonth()+1,second:e.getSeconds(),tzOffset:e.getTimezoneOffset(),year:e.getFullYear()}),a=(a=new Date,r,o,s=t)=>{s=Object.assign({},t,s),a=new Date(a.setMilliseconds(0));const l=new Date(a);let i=!1;const m=new Date(new Date(a).setFullYear(a.getFullYear()-100)),u=new Date(new Date(a).setFullYear(a.getFullYear()+100));r=r?new Date(r.setMilliseconds(0)):m,o=o?new Date(o.setMilliseconds(0)):u;let h=r.getTime(),g=o.getTime(),y=a.getTime();h>g&&(console.warn("min > max, setting min and max to defaults"),r=m,h=m.getTime(),o=u,g=u.getTime()),h>y&&(console.warn("min > value, setting value to min"),a=new Date(r),y=h,i=!0),g<y&&(console.warn("max < value, setting value to max"),a=new Date(o),y=g,i=!0);const d=n(r),f=n(o),c=n(a);let w=s.days?Array.from({length:e(c.month,c.year)},(e,t)=>t+1):[],D=s.months?Array.from({length:12},(e,t)=>t+1):[],x=s.hours?Array.from({length:24},(e,t)=>t):[],A=s.minutes?Array.from({length:60},(e,t)=>t):[],T=s.seconds?Array.from({length:60},(e,t)=>t):[];c.year===d.year&&(D=D.filter(e=>e>=d.month),c.month===d.month&&(w=w.filter(e=>e>=d.day),c.day===d.day&&(x=x.filter(e=>e>=d.hour),c.hour===d.hour&&(A=A.filter(e=>e>=d.minute),c.minute===d.minute&&(T=T.filter(e=>e>=d.second)))))),c.year===f.year&&(D=D.filter(e=>e<=f.month),c.month===f.month&&(w=w.filter(e=>e<=f.day),c.day===f.day&&(x=x.filter(e=>e<=f.hour),c.hour===f.hour&&(A=A.filter(e=>e<=f.minute),c.minute===f.minute&&(T=T.filter(e=>e<=f.second))))));const v=s.years?Array.from({length:f.year-d.year+1},(e,t)=>d.year+t):[];return{max:f,min:d,originalValue:n(l),originalValueChanged:i,periods:{days:w,hours:x,minutes:A,months:D,seconds:T,years:v},value:c}};export{t as defaultNeededPeriods,n as getDateTimeObject,a as getDateTimePeriods,e as getDaysInMonth};
//# sourceMappingURL=datetime-periods.modern.mjs.map
